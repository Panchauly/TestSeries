@model TestSeries.Models.ViewModel.QuestionViewModel
@{
    ViewBag.Title = "Add Question";
}

<h2>Add Question</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Branch, "Branch", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Branch", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Branch, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Level, "Level", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Level", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <div class="form-group">
            @Html.LabelFor(model => model.Subject, "Subject", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Subject", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Chapter, "Chapter", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Chapter", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Chapter, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuestionBody, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QuestionBody, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuestionBody, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 center-block">
                @Html.LabelFor(model => model.A, htmlAttributes: new { @class = "pull-right" })
                @Html.RadioButtonFor(model => model.RightAnswer, "A", htmlAttributes: new { @class = "pull-right" })
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.A, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.A, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
                <div class="col-md-2 center-block">
                    @Html.LabelFor(model => model.B, htmlAttributes: new { @class = "pull-right" })
                    @Html.RadioButtonFor(model=>model.RightAnswer,"B", htmlAttributes: new { @class= "pull-right" })
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.B, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.B, "", new { @class = "text-danger" })
                </div>
            </div>
        <div class="form-group">
            <div class="col-md-2 center-block">
                @Html.LabelFor(model => model.C, htmlAttributes: new { @class = "pull-right" })
                @Html.RadioButtonFor(model => model.RightAnswer, "C", htmlAttributes: new { @class = "pull-right" })
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.C, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.C, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
                  <div class="col-md-2 center-block">
                      @Html.LabelFor(model => model.D, htmlAttributes: new { @class = "pull-right" })
                      @Html.RadioButtonFor(model => model.RightAnswer, "D", htmlAttributes: new { @class = "pull-right" })
                  </div>
    <div class="col-md-10">
        @Html.EditorFor(model => model.D, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.D, "", new { @class = "text-danger" })
    </div>
</div>





        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}